var margin = {top: 5, right: 20, bottom: 1, left: 50},
    width = 660 - margin.left - margin.right,
    height = 320 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

function toDegrees (angle) {
  return angle * ( Math.PI / 180 );
}

//Linear Drag
//http://ww2.odu.edu/~agodunov/teaching/phys420/files/Erlichson.pdf

var curves = [];

var data = d3.csv.parse(data_embed['homeruns.csv'], function(d, i) {

  var curve = [];
  
  for (var i = 0; i < 6; i++) {
     
    var g = 32;                       //gravity
    
    var e = -0.35*i;                  //c
    var c = 1/0.35;  

    var v = d.SpeedOffBat * 1.46667;  //mph to ft/s
    var a = d.Elev_Angle;             //Angle

    var x = c * v * ( Math.cos( toDegrees(a) ) ) * ( 1 - Math.exp(e) )/2;
    var y = c * ( c * g + v * Math.sin( toDegrees(a) ) ) * (1 - Math.exp(e)) - (c * g * i - 3);
    
    curve[i] = {x, y};
  }
  curves.push(curve);
});

console.log(JSON.stringify(curves));

var xScale = d3.scale.linear()
      .domain([0, 200])
      .range([ 0, width ]);

var yScale = d3.scale.linear()
      .domain([0, 90])
      .range([ height, 0 ]);

var xAxis = d3.svg.axis()
    .scale(xScale)
    .ticks(0)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(yScale)
    .ticks(0)
    .orient("left");

var svg = d3.select("#vis").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var line = d3.svg.line()
      .interpolate('cardinal')
      .x(function(d){ return xScale(d.x) })
      .y(function(d){ return yScale(d.y) });

var path = svg.selectAll(".line")
    .data(curves)
  .enter().append("path")
    .attr("class", "line")
    .attr("d", line);

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis)
  .append("text")
    .attr("y", 6)
    .attr("dy", "-1em")
    .attr("dx", width)
    .style("text-anchor", "end")
    .text("distance (ft)");

svg.append("g")
    .attr("class", "y axis")
    .call(yAxis)
  .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("height (ft)");

